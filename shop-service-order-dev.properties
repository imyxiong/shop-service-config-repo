spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8
server.port=8000
spring.application.name=shop-service-order

# mysql datasource
spring.datasource.url=jdbc:mysql://localhost:3306/shop_service?useSSL=false&serverTimezone=Hongkong&useUnicode=true&characterEncoding=utf-8&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

# eureka
# 将eureka集群的url配置到服务模块
eureka.client.serviceUrl.defaultZone=http://localhost:9000/eureka/
# 使用ip注册
eureka.instance.preferIpAddress=true
# 在Eureka Server的管控台中，显示的服务实例名称
eureka.instance.instanceId=${spring.cloud.client.ip-address}:${server.port}

# Ribbon
# 配置负载均衡策略 shop-service-product为需要调用的服务名称
shop-service-product.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

# Feign
# shop-service-product为定义FeginClient的名称
# 建立链接的超时时长,相当于Request.Options
feign.client.config.shop-service-product.connectTimeout=5000
# 读取超时时长,相当于Request.Options
feign.client.config.shop-service-product.readTimeout=5000
# 配置Feign的日志级别，相当于代码配置方式中的Logger
# NONE【性能最佳，适用于生产】：不记录任何日志（默认值）
# BASIC【适用于生产环境追踪问题】：仅记录请求方法、URL、响应状态代码以及执行时间
# HEADERS：记录BASIC级别的基础上，记录请求和响应的header。
# FULL【比较适用于开发及测试环境定位问题】：记录请求和响应的header、body和元数据。
feign.client.config.shop-service-product.loggerLevel=full
# Feign日志只会对日志级别为debug的做出响应
logging.level.com.demo.order.component.IProductFeginClient=debug
# Feign的错误解码器，相当于代码配置方式中的ErrorDecoder
# feign.client.config.shop-service-product.errorDecoder= com.example.SimpleErrorDecoder
# 配置重试，相当于代码配置方式中的Retryer
# feign.client.config.shop-service-product.retryer=com.example.SimpleRetryer
# 添加请求拦截器，相当于代码配置方式中的RequestInterceptor
#feign.client.config.shop-service-product.requestInterceptors=com.example.FooRequestInterceptor,com.example.BarRequestInterceptor
# 配置熔断不处理404异常
feign.client.config.shop-service-product.decode404=false
# 请求压缩
# 开启请求压缩
feign.compression.request.enabled=true
# 设置压缩的数据类型
feign.compression.request.mime-types=text/html,application/xml,application/json
# 设置触发压缩的大小下限
feign.compression.request.min-request-size=2048
# 开启响应压缩
feign.compression.response.enabled=true

